name: build-flet-cross
on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: "Create Release"
        run: gh release create ${{github.ref_name}} --draft --verify-tag -t "${{github.ref_name}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  cross-build:
    needs: create-release
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            flet-name: EBDAS_${{github.ref_name}}_linux
            binary-name: EBDAS_${{github.ref_name}}_build_linux.tar.gz
          - runs-on: macos-latest
            flet-name: EBDAS_${{github.ref_name}}_macos
            binary-name: EBDAS_${{github.ref_name}}_build_macos.tar.gz
          - runs-on: windows-latest
            flet-name: EBDAS_${{github.ref_name}}_windows
            binary-name: EBDAS_${{github.ref_name}}_build_windows.zip
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11.7
          cache: "pip"
      - run: pip install -r requirements.txt
      - name: "pack(Windows)"
        if: runner.os == 'Windows'
        run: flet pack main.py --add-data "assets;assets" --name "EBDAS"
      - name: "pack(Linux/MacOS)"
        if: runner.os != 'Windows'
        run: flet pack main.py --add-data "assets:assets" --name "EBDAS"
      - name: "Linux/MacOS compress"
        if: runner.os != 'Windows'
        run: tar zcvf ${{matrix.binary-name}} dist
      - name: "Windows compress"
        if: runner.os == 'Windows'
        run: powershell Compress-Archive -Path dist -DestinationPath ${{matrix.binary-name}}
      - name: "Upload Release"
        run: gh release upload ${{github.ref_name}} ${{matrix.binary-name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}